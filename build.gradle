plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
}

allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects { subproject ->
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'
    }

    tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
        enabled = false
    }

    tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
        enabled = true
    }
    tasks.named('test') {
        useJUnitPlatform()
    }

    def name = subproject.getName()
    if (name.startsWith("data")) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

            implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
            annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
            annotationProcessor "jakarta.annotation:jakarta.annotation-api"
            annotationProcessor "jakarta.persistence:jakarta.persistence-api"
        }
        configurations {
            querysl.extendsFrom compileClassPath
        }
    } else if (name.startsWith("boot")) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-web'
        }
    }
}

